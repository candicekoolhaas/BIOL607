---
title: "Koolhaas_Candice_6_2025"
format: html
---

## 1. Complex Linear Models and their Design Matrices

Get data ready and load libraries:

```{r data n libs 1}
library(dplyr)
library(palmerpenguins)
data(penguins)

#some incomplete cases to filter out
penguins <- penguins |> filter(!is.na(sex))
```

**1A.** First, consider a linear model in which you attempt to predict a penguin’s body mass (`body_mass_g`) from its flipper length (`flipper_length-mm`) and the sex (`sex`) of the penguin.

```{r 1A}
mass_v_flipper <- lm(body_mass_g ~ flipper_length_mm + sex, 
                     data = penguins)
```

**1B.** Write down the entries in the design matrix, X for the first 3 observations in the data set. Don’t forget the intercept! Verify you are correct with the `model.matrix()` function. 

```{r 1b}
library(knitr)

design_matrix <- data.frame(
  Intercept = c(1, 1, 1),
  Flipper = c(181, 186, 195),
  Male = c(1, 0, 0)
)

kable(design_matrix, caption = "First 3 Rows of the Design Matrix")

model.matrix(mass_v_flipper)[1:3, ]
```

**1C.** Now, consider adding `species` to the model in addition to flipper length (`flipper_length-mm`) and the sex (`sex`) of the penguin. Fit the model using effects coding.

Write down the entries in the design matrix for the following observations:

```         
penguins[c(1, 2, 200, 201, 300, 301),
c("body_mass_g", "flipper_length_mm", "sex", "species")]
```

```{r 1c}
# OK effects coding is different than dummy coding
# Tell R to use effects coding
contrasts(penguins$species) <- contr.sum

body_mass_clm <- lm(body_mass_g ~ flipper_length_mm + sex + species, data = penguins)

penguins[c(1, 2, 200, 201, 300, 301), 
         c("body_mass_g", "flipper_length_mm", "sex", "species")]

design_matrix2 <- data.frame(
  Intercept = c(1, 1, 1, 1, 1, 1),
  Flipper = c(181, 186, 217, 220, 195, 199),
  Male = c(1, 0, 0, 1, 1, 0),
  Species = c(-1, -1, 0, 0, 1, 1)
)

kable(design_matrix2, caption = "New Design Matrix")

model.matrix(body_mass_clm)[1:6, ]
```

**1D.** Lastly, let’s allow the effect of flipper length to be sex-specific. This can be accomplished by adding an interaction between `sex` and `flipper_length_mm`. Again, write down the entries in the design matrix for 6 observations selected just above. Check yourself with `model.matrix()`

```{r 1d}
body_mass_interaction <- lm(body_mass_g ~ flipper_length_mm + sex + flipper_length_mm*sex + species, data = penguins)

design_matrix3 <- data.frame(
  Intercept = c(1, 1, 1, 1, 1, 1),
  Flipper = c(181, 186, 217, 220, 195, 199),
  Male = c(1, 0, 0, 1, 1, 0),
  Species = c(-1, -1, 0, 0, 1, 1),
  Interaction = c(181, 0, 0, 220, 195, 0)
)

kable(design_matrix3, caption = "Interaction Design Matrix")

model.matrix(body_mass_interaction)[1:6, ]
```

## 2. Three Variations on a Theme

For this exercise, we will use the `leaftemp` data set in the `DAAG` package. The data set contains measurements of vapor pressure (`vapPress`) and differences between leaf and air temperatures (`tempDiff`) in an experiment conducted at three different levels of carbon dioxide (`CO2level`).

**2A.** Fit the following three models to these data:

-   simple linear regression: `lm(tempDiff ~ vapPress, data = leaftemp)`

-   Analysis of covariance: `lm(tempDiff ~ vapPress + CO2level, data= leaftemp)`

-   Interaction model: `lm(tempDiff ~ vapPress*CO2level, data= leaftemp)`

```{r 2a}
pacman::p_load(DAAG)
data(leaftemp)

lm1 <- lm(tempDiff ~ vapPress, data = leaftemp)
lm2 <- lm(tempDiff ~ vapPress + CO2level, data= leaftemp)
lm3 <- lm(tempDiff ~ vapPress*CO2level, data= leaftemp)
```

**2B.** Do all of these models pass checks of assumptions?

```{r 2b}
library(performance)

# check lm1
check_model(lm1)
qqnorm(residuals(lm1))  
qqline(residuals(lm1), col = "red") 

# check lm2
check_model(lm2)
qqnorm(residuals(lm2))  
qqline(residuals(lm2), col = "red")

# check lm3
check_model(lm3)
qqnorm(residuals(lm3))  
qqline(residuals(lm3), col = "red")
```

*lm1: I think it looks pretty good, but the assumption of equal variance is a bit off, but the regular QQ plot looks OK.*

*lm2: Looks even better than lm1.*

*lm3: This one is the worst actually. So again the homogeneity of variance is off, and also CO2Level and its interaction effect has high colinearity. BUT in one of our previous lectures, the instructor said that colinearity is actually NOT important for interactions! I guess that makes sense, because of course CO2Level is colinear with its own interaction. So, I actually think this model is AOK too.*

**2C.** For the **Analysis of covariance model**, write down the equation Corresponding to the model. In quarto, you can use LaTeX to write equations fairly simply. Check out this quick primer [here](https://rmd4sci.njtierney.com/math) and/or just use this LaTeX equation generator [here](https://latexeditor.lagrida.com/). I promise, it’s super useful!

-   `lm(tempDiff ~ vapPress + CO2level, data= leaftemp)`

$$
Y_i = \beta_0 + \beta_1 \text{vapPress}_{i} + \beta_2 \text{CO2 Level}_{i} + \epsilon_i
$$

**2D**. Plot the predicted mean temperature difference as a function of vapor pressure (and when appropriate, CO2 level) for each of the 3 models.

```{r 2d}
library(ggplot2)

vap_seq <- seq(min(leaftemp$vapPress), max(leaftemp$vapPress), length.out = 100)

# We only want vapPress and co2
# Because we are predicting the value of temp
# based on the models
pred_data1 <- data.frame(vapPress = vap_seq)  # just has vapPress
pred_data2 <- expand.grid(vapPress = vap_seq, CO2level = unique(leaftemp$CO2level))  # also has co2

# Get predictions
pred_data1$tempDiff <- predict(lm1, newdata = pred_data1)
pred_data2$tempDiff2 <- predict(lm2, newdata = pred_data2)
pred_data2$tempDiff3 <- predict(lm3, newdata = pred_data2)

ggplot(leaftemp, aes(x = vapPress, y = tempDiff)) +
  geom_point(alpha = 0.5) +  
  geom_line(data = pred_data1, aes(y = tempDiff), 
            color = "blue", linewidth = 1) +
  labs(title = "Model 1: tempDiff ~ vapPress", 
       x = "Vapor Pressure", y = "Temperature Difference") +
  theme_minimal()

ggplot(leaftemp, aes(x = vapPress, y = tempDiff, 
                     color = as.factor(CO2level))) +
  geom_point(alpha = 0.5) +
  geom_line(data = pred_data2, 
            aes(y = tempDiff2, group = as.factor(CO2level)), 
            size = 1) +
  labs(title = "Model 2: tempDiff ~ vapPress + CO2level",
       x = "Vapor Pressure", y = "Temperature Difference", 
       color = "CO2 Level") +
  scale_color_viridis_d() +
  theme_minimal()

ggplot(leaftemp, aes(x = vapPress, y = tempDiff, 
                     color = as.factor(CO2level))) +
  geom_point(alpha = 0.5) +
  geom_line(data = pred_data2, aes(y = tempDiff3, group = as.factor(CO2level)), size = 1) +
  labs(title = "Model 3: tempDiff ~ vapPress * CO2level",
       x = "Vapor Pressure", y = "Temperature Difference", 
       color = "CO2 Level") +
    scale_color_viridis_d() +
  theme_minimal()
```

## 3. Interactions with Continuous Variables

Scientists wanted to simulate how different biological interactions might influence the carbon burial potential of sinking algae in the deep ocean. Let’s use [this simulated data](https://biol607.github.io/homework/data/c_burial_sims.csv) which features sinking rate, microbial abundance, and detritovore abundance as predictors of net carbon sequestration.

**3A** Load the data, inspect it, and fit a model with a 3-way interaction, Do you meet assumptions?

```{r 3a}
library(readr)
data <- read_csv("data/c_burial_sims.csv", show_col_types = F)

summary(data)

library(patchwork)

h1 <- ggplot(data, aes(x = sink_rate)) + 
  geom_histogram(binwidth = 2, fill = "blue", alpha = 0.5)
h2 <- ggplot(data, aes(x = microbial_abundance)) + 
  geom_histogram(binwidth = 2, fill = "red", alpha = 0.5)
h3 <- ggplot(data, aes(x = detritivore_biomass)) + 
  geom_histogram(binwidth = 2, fill = "green", alpha = 0.5)
h4 <- ggplot(data, aes(x = net_carbon_sequestration)) + 
  geom_histogram(binwidth = 2, fill = "purple", alpha = 0.5)

(h1 + h2) / (h3 + h4)

int_mod <- lm(sink_rate ~ detritivore_biomass*microbial_abundance*net_carbon_sequestration, data = data)

check_model(int_mod)
```

*No it does not. The model-predicted values are double-peaked and the observed values are single peaked, which definitely is clue to the model not fitting well. Seems like the linearity assumption is also violated, and homogeneity of variance. Weird stuff going on with multicolinearity too.*

**3B** Now the fun part - inference. What do the coefficients tell you?

```{r 3b}
library(broom)

tidy(int_mod)

ggplot(data, aes(x = detritivore_biomass, y = sink_rate)) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "lm", se = TRUE, color = "lightblue") +
  labs(title = 
         "Simple Effect of Detritivore Biomass on Sink Rate",
       x = "Detritivore Biomass", y = "Sink Rate") +
  theme_minimal()

ggplot(data, aes(x = microbial_abundance, y = sink_rate)) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "lm", se = TRUE, color = "lightgreen") +
  labs(title = 
         "Simple Effect of Microbial Abundance on Sink Rate",
       x = "Microbial Abundance", y = "Sink Rate") +
  theme_minimal()

ggplot(data, aes(x = net_carbon_sequestration, y = sink_rate)) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "lm", se = TRUE, color = "pink") +
  labs(title = 
         "Simple Effect of Net Carbon Sequestration on Sink Rate",
       x = "Net Carbon Sequestration", y = "Sink Rate") +
  theme_minimal()


```

*So I made plots of the simple effects because my lecture notes say to always plot before trying to make sense of an interaction... but it seems that all else being equal, detritivore_biomass and microbial_abundance reduce sink_rate and net_carbon_sequesteration increases it, but that they all interact with each other, so we should take the simple effects with a grain of salt.*

**3C** OK - that’s a lot. Use your skills of visualization do tease out what the data is telling us. You can use `visreg()` or `augment()` with `data_grid()` or whatever you would like. Make this model make sense so that you can tell your audience how these three parameters work together to influence carbon burial!

*Oof, so we need to show how the effect of detritive biomass on sink rate is dependent upon microbial abundance and net carbon sequestration. Let's indeed use visreg() to see some 2 way interactions first:*

```{r 3c}
library(visreg)

visreg(int_mod, "detritivore_biomass", 
       by = "microbial_abundance", 
       cond = list(net_carbon_sequestration = 
                     mean(data$net_carbon_sequestration)))

visreg(int_mod, "detritivore_biomass", 
       by = "net_carbon_sequestration", 
       cond = list(microbial_abundance = 
                     mean(data$microbial_abundance)))

```

*So, when microbial abundance is low, detritivore biomass makes sink rate go down, but when microbial abundance is high, biomass makes sink rate go up. And when carbon sequestration is low, biomass makes sink rate go up but when carbon is high then biomass makes sink rate go down.*

*The only way I can think to visualize a 3 way interaction is a 3d plot:*

```{r 3d}
library(plotly)

plot_ly(data, x = ~detritivore_biomass, y = ~microbial_abundance, 
        z = ~sink_rate, 
        color = ~net_carbon_sequestration, 
        type = "scatter3d", mode = "markers") %>%
  layout(title = "How 3 variables affect Sink Rate",
         scene = list(xaxis = list(title = "Detritivore Biomass"),
                      yaxis = list(title = "Microbial Abundance"),
                      zaxis = list(title = "Sink Rate")))

```

*Here are the major patterns, I think:*

-   *When microbes and biomass is high and carbon is low, sink rate is high*

-   *When microbes are low and biomass is low and carbon is high, sink rate is high*

-   *When all three are high, sink rate is low*

-   *When all three are low, sink rate is also low*

*So this is how I would summarize it: sink rate is high when carbon is high only if microbes and biomass are low, and sink rate is high when carbon is low only when biomass and microbes are high.*

### Meta 1

Where do you think we will go next with models like there?

*Hopefully no more three way interactions! But many models have at least one interaction. I would say most models in science follow this kind of formula: \
y \~ variable1 + variable2 + variable1\*variable3 + randomEffect*

### Meta 2

In particular, what do you find most interesting about intereaction effects? What do you find most intimidating?

*Interaction effects between more than two variables can stay away from me haha. Otherwise interactions are pretty important, I think I remember someone saying once that every model of natural phenomenon should have an interaction effect.*

### Meta 3

How do you think you will use complex linear models like these in your own work?

*In my own work I frequently use multiple regression with interaction effects. We don't call them "complex" linear models though, but I like how that makes it sound cooler haha.*

### Meta 4

Now that we have fully explored purely “linear” models, what one question or concern do you still have?

*I guess my question would be how to tell your data is nonlinear enough to justify using a nonlinear model rather than transforming your data.*

### Meta 5

How much time did this take you, roughly? Again, I’m trying to keep track that these assignments aren’t killer, more than anything.

*Probably about 3 hours.*

### Meta 6

Please give yourself a weak/sufficient/strong assessment on this assigment. Feel free to comment on why.

*Haha I always rate myself as strong because I know how much time I spent on this and in the life of a grad student, 3 hours is not trivial. I also feel like I understood this homework AOK.*
